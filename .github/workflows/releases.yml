name: (A) Create Release
on:
  push:
    branches:
      - '*'
permissions:
  contents: write
jobs:
  release:
    name: Tag code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'
      - name: Create/push release
        run: |
          # Prep Git
          git remote set-url origin https://$username:$GITHUB_TOKEN@github.com/UCBoulder/dingo.git
          git config --global user.email "$email"
          git config --global user.name "$username"

          # Fetch all tags and branches
          git fetch --tags --force

          # Determine current version and next version
          echo "Determining latest version..."
          git tag -l | sort -V
          current_version=$(git tag -l | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -1)
          echo "Current version: $current_version"

          # If no version tag exists, start with 1.0.0
          if [ -z "$current_version" ]; then
            current_version="1.0.0"
            echo "No version tag found. Starting with $current_version"
          fi

          # Calculate next version
          next_version=$(echo ${current_version} | awk -F. -v OFS=. '{$NF += 1 ; print}')
          echo "Next version will be: $next_version"

          # Get current and latest commit hashes
          current_sha=$(git rev-parse --short HEAD)
          latest_tag_sha=$(git rev-list -n 1 $current_version 2>/dev/null || echo "none")

          # Check if a release for next version already exists
          if git tag | grep -q "^$next_version$"; then
            echo "Error: Tag $next_version already exists!"
            exit 1
          fi

          # Build Theme
          home=$(pwd)
          mkdir -p /tmp/dingo
          cp -R * /tmp/dingo
          cd /tmp/dingo
          npm install
          npm run build
          rm -fR node_modules
          rm -fR package.json
          rm -fR package-lock.json
          rm -fR README.md
          rm -fR screenshot.png
          rm -fR yarn.lock
          rm -fR babel.config.js
          cd ../
          zip -r "dingo-$next_version.zip" dingo
          cd $home

          # Create changelog without affecting release title
          echo '# CHANGELOG' > release.md
          if [ "$latest_tag_sha" != "none" ]; then
            git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s' $latest_tag_sha..$current_sha --no-merges >> release.md
          else
            git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s' --no-merges -n 10 >> release.md
          fi

          # Create release with exact version number as title
          echo "Creating release $next_version..."
          gh release create $next_version "/tmp/dingo-$next_version.zip#Dingo Built Theme" -F release.md --title "$next_version"

          # Clean up
          rm -fR /tmp/dingo
          rm -f /tmp/dingo-*.zip
        env:
          set_version: ${{ github.event.inputs.version }}
          username: ${{ secrets.GIT_USER }}
          email: ${{ secrets.GIT_EMAIL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
