name: (A) Create Release
on:
  push:
    branches:
      - '*'
permissions:
  contents: write
jobs:
  release:
    name: Tag code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'
      - name: Create/push release
        run: |
          # Prep Git
          git remote set-url origin https://$username:$GITHUB_TOKEN@github.com/UCBoulder/dingo.git
          git config --global user.email "$email"
          git config --global user.name "$username"
          git fetch --tags
          current_sha=$(git rev-parse --short HEAD)
          current_version=$(git describe --tags --abbrev=0)
          latest_sha=$(git rev-list --tags --max-count=1)
          next_version=$(echo ${current_version} | awk -F. -v OFS=. '{$NF += 1 ; print}')
          git checkout $latest_sha
          git checkout $current_sha
          # Build Theme
          home=$(pwd)
          mkdir /tmp/dingo
          cp -R * /tmp/dingo
          cd /tmp/dingo
          npm install
          npm run build
          rm -fR node_modules
          rm -fR package.json
          rm -fR package-lock.json
          rm -fR README.md
          rm -fR screenshot.png
          rm -fR yarn.lock
          rm -fR babel.config.js
          cd ../
          zip -r "dingo-$next_version.zip" dingo
          cd $home
          # Create changelog without affecting release title
          echo '# CHANGELOG' > release.md
          git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s' $latest_sha..$current_sha --no-merges >> release.md
          # Create release with exact version number as title (--title flag ensures clean title)
          gh release create $next_version "/tmp/dingo-$next_version.zip#Dingo Built Theme" -F release.md --title "$next_version"
          rm -fR /tmp/dingo
          rm -f /tmp/dingo-*.zip
        env:
          set_version: ${{ github.event.inputs.version }}
          username: ${{ secrets.GIT_USER }}
          email: ${{ secrets.GIT_EMAIL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
